// <auto-generated />
using System;
using Big_Bang__Assessment_1.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Big_Bang__Assessment_1.Migrations
{
    [DbContext(typeof(HotelContext))]
    [Migration("20230528083926_bb1")]
    partial class bb1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassLibrary.Models.Customer", b =>
                {
                    b.Property<int>("Customer_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Customer_Id"));

                    b.Property<string>("Customer_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Customer_Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ClassLibrary.Models.Hotel", b =>
                {
                    b.Property<int>("Hotel_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Hotel_Id"));

                    b.Property<string>("Hotel_Amenities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hotel_Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hotel_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Hotel_Price")
                        .HasColumnType("int");

                    b.Property<int>("Room_Availability")
                        .HasColumnType("int");

                    b.HasKey("Hotel_Id");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("ClassLibrary.Models.Reservation", b =>
                {
                    b.Property<int>("Reservation_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Reservation_Id"));

                    b.Property<DateTime>("Check_in_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Check_out_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomersCustomer_Id")
                        .HasColumnType("int");

                    b.Property<int>("hotelsHotel_Id")
                        .HasColumnType("int");

                    b.HasKey("Reservation_Id");

                    b.HasIndex("CustomersCustomer_Id");

                    b.HasIndex("hotelsHotel_Id");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("ClassLibrary.Models.Room", b =>
                {
                    b.Property<int>("Room_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Room_Id"));

                    b.Property<int>("Hotel_Id")
                        .HasColumnType("int");

                    b.Property<int?>("HotelsHotel_Id")
                        .HasColumnType("int");

                    b.Property<string>("Room_Availability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Room_Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Room_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Room_Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Room_Id");

                    b.HasIndex("HotelsHotel_Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("ClassLibrary.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<int?>("HotelsHotel_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Manage_Room_Availability")
                        .HasColumnType("bit");

                    b.Property<string>("StaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.HasIndex("HotelsHotel_Id");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("ClassLibrary.Models.Reservation", b =>
                {
                    b.HasOne("ClassLibrary.Models.Customer", "Customers")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomersCustomer_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassLibrary.Models.Hotel", "hotels")
                        .WithMany("Reservations")
                        .HasForeignKey("hotelsHotel_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");

                    b.Navigation("hotels");
                });

            modelBuilder.Entity("ClassLibrary.Models.Room", b =>
                {
                    b.HasOne("ClassLibrary.Models.Hotel", "Hotels")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelsHotel_Id");

                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("ClassLibrary.Models.Staff", b =>
                {
                    b.HasOne("ClassLibrary.Models.Hotel", "Hotels")
                        .WithMany("Staff")
                        .HasForeignKey("HotelsHotel_Id");

                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("ClassLibrary.Models.Customer", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("ClassLibrary.Models.Hotel", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("Rooms");

                    b.Navigation("Staff");
                });
#pragma warning restore 612, 618
        }
    }
}
